name: test_python_versions

on: [push, pull_request]

jobs:
  build:
    name: Test on ${{ matrix.os }} python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8, pypy2, pypy3]

    steps:
      - name: ${{ matrix.os }} python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Check versions without bash
        run: |
          python --version
          python -c 'import platform; print(platform.python_implementation())'

      - name: Check versions without login
        shell: bash
        run: |
          python --version
          python -c 'import platform; print(platform.python_implementation())'
          type -a python
          echo "PATH=${PATH}"

      - name: Check versions with login
        shell: bash -l {0}
        run: |
          python --version
          python -c 'import platform; print(platform.python_implementation())'
          type -a python
          echo "PATH=${PATH}"

      - name: Bubble problems up to github actions
        shell: bash -l {0}
        run: |
          py_ver="${{ matrix.python-version }}"
          if [ $py_ver == "pypy2" ]; then py_ver="2.7"; fi
          if [ $py_ver == "pypy3" ]; then py_ver="3.6"; fi
          (echo 'import sys'; echo 'if "{0}.{1}".format(sys.version_info.major, sys.version_info.minor)!="${py_ver}": raise ValueError()') | python
